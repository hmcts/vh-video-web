<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <LangVersion>latestmajor</LangVersion>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <PublishRunWebpack>true</PublishRunWebpack>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
    <ProjectGuid>8FA72ADD-8CB7-4BC5-B99B-AF2871B31E09</ProjectGuid>
  </PropertyGroup>

  <Target Name="AssemblyVersionAttributes" BeforeTargets="BeforeBuild">
    <PropertyGroup>
      <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
      <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
      <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    </PropertyGroup>
  </Target>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn>
    <DocumentationFile></DocumentationFile>
    <UserSecretsId>CA353381-2F0D-47D7-A97B-79A30AFF8B86</UserSecretsId>
  </PropertyGroup>

  <PropertyGroup>
    <UseAppHost>false</UseAppHost>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BookingsApi.Client" Version="1.46.3-pr-0691-0059" />
    <PackageReference Include="Castle.Core" Version="5.1.1" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="10.4.0" />
    <PackageReference Include="MicroElements.Swashbuckle.FluentValidation" Version="5.7.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.16.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.11" />
    <PackageReference Include="Microsoft.AspNetCore.Http.Connections.Common" Version="6.0.11" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Core" Version="2.2.5" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson" Version="6.0.11" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.10" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.11" />
    <PackageReference Include="Microsoft.Azure.SignalR" Version="1.21.2" />
    <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="6.0.16" />
    <PackageReference Include="Microsoft.Extensions.DependencyModel" Version="7.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.ApplicationInsights" Version="2.16.0" />
    <PackageReference Include="Microsoft.Extensions.Http.Polly" Version="3.1.1" />
    <PackageReference Include="Microsoft.OpenApi" Version="1.4.5" />
    <PackageReference Include="Polly" Version="7.2.1" />
    <PackageReference Include="Scrutor" Version="3.3.0" />
    <PackageReference Include="SonarAnalyzer.CSharp" Version="8.55.0.65544">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Newtonsoft" Version="6.5.0" />
    <PackageReference Include="UserApi.Client" Version="1.44.2" />
    <PackageReference Include="VH.Core.Configuration" Version="0.1.13" />
    <PackageReference Include="VideoApi.Client" Version="1.44.12" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <Content Update="appsettings.Development.json">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="appsettings.json">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\VideoWeb.Common\VideoWeb.Common.csproj" />
    <ProjectReference Include="..\VideoWeb.Contract\VideoWeb.Contract.csproj" />
    <ProjectReference Include="..\VideoWeb.EventHub\VideoWeb.EventHub.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="..\VideoWeb.AcceptanceTests\Features" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish" Condition=" '$(PublishRunWebpack)' == 'true' ">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build-prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
